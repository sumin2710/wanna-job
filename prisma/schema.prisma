generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId        Int            @id @default(autoincrement()) @map("userId")
  clientId      String?        @db.VarChar(255)
  email         String?        @unique @map("email")
  password      String?        @map("password")
  role          UserRole       @default(USER) @map("role")
  createdAt     DateTime       @default(now()) @map("createdAt")
  updatedAt     DateTime       @updatedAt @map("updatedAt")
  refreshTokens RefreshTokens?
  resumes       Resumes[]
  userInfos     UserInfos?

  @@map("Users")
}

model UserInfos {
  userInfoId   Int      @id @default(autoincrement()) @map("userInfoId")
  userId       Int      @unique @map("userId")
  name         String   @map("name")
  age          Int?     @map("age")
  gender       String?  @map("gender")
  profileImage String?  @map("profileImage")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")
  user         Users    @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("UserInfos")
}

model Resumes {
  resumeId     Int          @id @default(autoincrement()) @map("resumeId")
  userId       Int          @map("userId")
  title        String       @map("title")
  introduction String?      @map("introduction") @db.Text
  hobby        String?      @map("hobby")
  status       ResumeStatus @default(APPLY) @map("status")
  createdAt    DateTime     @default(now()) @map("createdAt")
  updatedAt    DateTime     @updatedAt @map("updatedAt")
  user         Users        @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([userId], map: "Resumes_userId_fkey")
  @@map("Resumes")
}

model RefreshTokens {
  tokenId   Int      @id @default(autoincrement()) @map("tokenId")
  userId    Int      @unique @map("userId")
  token     String   @map("token")
  ip        String   @map("ip")
  userAgent String   @map("userAgent")
  createdAt DateTime @default(now()) @map("createdAt")
  expiresAt DateTime @map("expiresAt")
  user      Users    @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("RefreshTokens")
}

enum UserRole {
  USER
  HR_MANAGER
  ADMIN
}

enum ResumeStatus {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
